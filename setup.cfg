# 🌀 Full Eidosian configuration – structured, elegant, and robust! 🏗️
#╔══════════════════════════════════════════════════════════════════════╗
#║ 📦 OLLAMA FORGE: Python client that forges connections               ║
#║    Built with precision, unleashed with velocity                     ║
#║    Where APIs harmonize and intelligence evolves                     ║
#╚══════════════════════════════════════════════════════════════════════╝

[metadata]
name = ollama_forge              # 🛠️ The forge where APIs are hammered into elegance
description = Ollama Forge Python Client  # 🔥 Not just a wrapper—a transformation
long_description = file: README.md  # 📜 The saga unfolds within
long_description_content_type = text/markdown  # 📊 Formatted for maximum clarity
author = Lloyd Handyside, Eidos  # 👨‍💻 Architects of efficiency
author_email = ace1928@gmail.com, syntheticeidos@gmail.com  # 📧 Connect with the creators
url = https://github.com/Ace1928/ollama_forge  # 🌐 The source of truth
license = MIT  # ⚖️ Freedom with responsibility
license_files = LICENSE  # 📄 Legal precision matters
classifiers =
    Programming Language :: Python :: 3.8  # 🐍 Python compatibility spectrum begins
    Programming Language :: Python :: 3.9  # 🐍➕ The journey continues
    Programming Language :: Python :: 3.10  # 🐍➕➕ Modern capabilities
    Programming Language :: Python :: 3.11  # 🐍➕➕➕ Future-ready
    Programming Language :: Python :: 3.12  # 🐍➕➕➕➕ Cutting edge

#╔══════════════════════════════════════════════════════════════════════╗
#║ ⚙️ OPTIONS: Where possibilities become capabilities                  ║
#║         Every dependency chosen with surgical precision              ║
#╚══════════════════════════════════════════════════════════════════════╝

[options]
packages = find:  # 🔍 Automatic discovery—why hunt manually?
package_dir =
    = .  # 🏠 Home is where the code is
python_requires = >=3.8  # 🐍 Modern Python for modern solutions
install_requires =
    requests  # 🌊 HTTP flows like water
    aiohttp   # ⚡ Async when milliseconds matter
    colorama  # 🌈 Because monochrome terminals are so 1970s

#╔══════════════════════════════════════════════════════════════════════╗
#║ 🧩 ENTRY POINTS: Where commands become actions                       ║
#║              Command → Function → Result → Value                     ║
#╚══════════════════════════════════════════════════════════════════════╝

[options.entry_points]
console_scripts =
    ollama-quickstart = examples.quickstart:main  # 🚀 Zero to hero in seconds

#╔══════════════════════════════════════════════════════════════════════╗
#║ 📁 PACKAGE DISCOVERY: Find what matters, ignore what doesn't         ║
#║                    Signal extracted, noise rejected                  ║
#╚══════════════════════════════════════════════════════════════════════╝

[options.packages.find]
where = .  # 🔭 The universe begins here
exclude =
    tests     # 🧪 Tests verify but don't deploy
    tests.*   # 🧫 Not even nested test modules

#╔══════════════════════════════════════════════════════════════════════╗
#║ 🧰 DEVELOPMENT TOOLS: Perfection requires the right instruments      ║
#║              Each tool precisely tuned for its purpose               ║
#╚══════════════════════════════════════════════════════════════════════╝

[options.extras_require]
dev =
    black      # 🖤 Code formatted with relentless consistency
    flake8     # 🔍 Finds errors before they find you
    mypy       # 🔒 Type safety is not optional
    pytest     # ✅ Tests that actually test
    pytest-cov # 📊 Coverage metrics that don't lie
    sphinx     # 📚 Documentation that illuminates
    twine      # 🧶 Deployment handled with care
docs =
    sphinx       # 📖 Documentation framework
    sphinx-rtd-theme  # 🎨 Beautiful docs deserve beautiful themes
    myst-parser  # 🔄 Markdown and reStructuredText in harmony

#╔══════════════════════════════════════════════════════════════════════╗
#║ 📄 PACKAGE DATA: Essential artifacts for your journey                ║
#║           Nothing included without purpose, nothing excluded in need ║
#╚══════════════════════════════════════════════════════════════════════╝

[options.package_data]
* = *.md, LICENSE  # 📜 Documentation is not optional—it's essential

#╔══════════════════════════════════════════════════════════════════════╗
#║ 🔧 TOOL CONFIGURATIONS: Tools sharpened for precision                ║
#╚══════════════════════════════════════════════════════════════════════╝

[flake8]
max-line-length = 100  # 📏 Long enough for expression, short enough for clarity
exclude = .git,__pycache__,build,dist  # 🚫 Focus on what matters

[mypy]
python_version = 3.8  # 🐍 The baseline of type safety
warn_return_any = True  # ⚠️ Return types must be explicit
warn_unused_configs = True  # 🔍 Configuration clarity is essential

[tool:pytest]
testpaths = tests  # 🧪 All tests in their rightful place
python_files = test_*.py  # 📄 Naming convention enforced
